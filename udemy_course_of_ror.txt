

# Taking input from user in ror *********************************************************************

# gets.chomp is used to take values form user


# puts "tell me your firstname"

# first_name = gets.chomp

# puts "thanks for telling your name, Hii #{first_name}"


# ouput 
# tell me your firstname
# chirag                            # given by user
# thanks for telling your name, Hii chirag


# 2nd e.g

# puts "enter no."

# input = gets.chomp

# puts input.to_i * 2            // .to_i  used to convert it into integer because bydefault it takes input in string form



# enter no.
# 5
# 10


# to generate random no. use rand function it generate no.s from 0 to 1 rand(10)  use to generate no.s from 0 to 9


# some no.s operations for more understanding*****************************************************

# e.g.1

# x = 1..100

# # puts x.class                     # range

# # print x.to_a                     # 1 to 10 in always new line because of puts

# y = x.to_a

# # print y.shuffle              # [8, 2, 77, 62, 16, 55, 78, 71, 89, 39, 67, 84, 29, 18, 22, 48, 87, 93, 37, 23, 75, 92, 79, 40, 10, 26, 65, 45, 38, 53, 25, 47, 66, 4, 6, 73, 63, 76, 58, 11, 19, 13, 36, 83, 54, 60, 14, 70, 30, 88, 20, 96, 31, 42, 68, 99, 72, 74, 56, 98, 41, 21, 69, 28, 5, 27, 52, 94, 9, 57, 24, 85, 12, 15, 81, 86, 82, 91, 32, 95, 50, 33, 17, 1, 35, 64, 49, 44, 34, 59, 3, 7, 46, 100, 90, 97, 51, 80, 43, 61]

# # 4.times {puts}

# # print y                      #[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]


#  y.shuffle!                   #[75, 40, 88, 62, 43, 99, 5, 97, 38, 12, 67, 66, 80, 70, 30, 22, 9, 50, 53, 60, 23, 90, 82, 65, 26, 17, 76, 34, 51, 35, 29, 83, 86, 44, 45, 92, 33, 8, 15, 100, 94, 98, 27, 74, 28, 73, 21, 36, 72, 58, 49, 1, 93, 68, 85, 46, 37, 11, 18, 52, 32, 47, 87, 81, 78, 95, 14, 69, 41, 25, 3, 39, 91, 7, 57, 84, 13, 24, 63, 20, 10, 19, 42, 48, 4, 79, 64, 61, 77, 6, 59, 56, 16, 2, 54, 96, 89, 31, 55, 71]

# print y



# e.g.2
# NOTE : this ! called bang its mutate the call means changes happend permanently

# x = (1..10).to_a

# print x.reverse           #[10, 9, 8, 7, 6, 5, 4, 3, 2, 1]

# puts

# print x                    #[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]


# puts

# print x.reverse!           #[10, 9, 8, 7, 6, 5, 4, 3, 2, 1]

# here by applying this ! called bang its mutate the call means changes happend permanently

# puts

# print x                    #[10, 9, 8, 7, 6, 5, 4, 3, 2, 1]


# more orperations 


# a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

# # print a.push(100)
# # print a.append(20)

# # print a.pop(100)
# print a.unshift(100)
# puts
# print a.unshift(100)
# puts
# print a.uniq!

# puts 
# print a

# puts a.include?(1)              # true or false return depend upon condition

# print a.join(", ")              #joins the arry element i.e,   1, 2, 3, 4, 5, 6, 7, 8, 9, 10


# b =  a.join("-")

# print b.split('-')              # threw split it convert it into an array and by giving ('-') it seprate this threw dash and make a string array

# print %w(hello bhai kesa hai re tu aaj bohot yaad aari hai uski)      # convert it into an array ["hello", "bhai", "kesa", "hai", "re", "tu", "aaj", "bohot", "yaad", "aari", "hai", "uski"]



# z = 1..100

# print z.select {|number| number.odd?}          # only print odd element



# Project 1************************************************************************************************


# welcome to authenticator
# -------------------------
# This program will take input from the user and compare password
# Username:asgwesrfg
# Password:aergaerg

# Credentials are not correct
# press n to quit or any other key to continue
# fg
# Username:chirag
# Password:Chirag@2001

# {:username => chirag , :password => Chirag@2001}
# press n to quit or any other key to continue
# k
# Username:adlaja    
# Password:argaergaer

# Credentials are not correct
# press n to quit or any other key to continue
# n
# session end


# code of project -------------

# user = [
#     {username: "chirag",
#     password: "chirag@2001"},
    
#     {username: "dhruvi",
#     password: "Chirag@2001"}
# ]

# puts "welcome to authenticator"
# 25.times {print "-"}
# puts

# puts "This program will take input from the user and compare password"

# i = 3
# flag = 1

# while i != 0 
    
#     print "Username:"
#     name = gets.chomp
#     print "Password:"
#     pass = gets.chomp
#     puts
    
    
#     user.each do |user_record|
        
#         if user_record[:username] == name && user_record[:password] == pass
#         puts  user_record
#         break
#     else
#         puts "Credentials are not correct"
#         break
#     end
#     end
    
#     puts "press n to quit or any other key to continue"
#     x = gets.chomp
    
#     x = x.to_s
    
#     if(x == "n")
#         puts "session end"
#         break
#     end
    
#     i = i-1
    
#     if(i <= 0)
#         flag = 0
#     end
    
#     if(flag == 0)
#     puts 'you have exceeded no. of attempts'
#     break

#     end
    
# end

























